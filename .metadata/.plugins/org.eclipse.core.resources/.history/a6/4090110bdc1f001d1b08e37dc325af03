package com.spedi123.javaexam2.controllers;

import java.awt.Robot;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;

import com.spedi123.javaexam2.models.Show;
import com.spedi123.javaexam2.models.User;
import com.spedi123.javaexam2.services.ShowService;
import com.spedi123.javaexam2.services.UserService;

@Controller
public class ShowController {

	@Autowired
	private ShowService showServ;

	@Autowired
	private UserService userServ;
	
	// ========== Display ==========
	
	@GetMapping("/shows")
	public String dashboard(HttpSession session, Model model) {
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		User user = userServ.getOne((Long)session.getAttribute("uuid"));
		List<Show> allShows = showServ.getAll();
		
		model.addAttribute("loggedInUser", user);
		model.addAttribute("allShows", allShows);
		
		return "list_show.jsp";
	}
	
	@GetMapping("/shows/{id}") 
	public String oneShow(@PathVariable("id")Long id, HttpSession session, Model model) {
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		User user = userServ.getOne((Long)session.getAttribute("uuid"));
		model.addAttribute("loggedInUser", user);
		model.addAttribute("oneShow", showServ.getOne(id));
		
		return "one_show.jsp";
	}
	
	@GetMapping("shows/new")
	public String newShow(@ModelAttribute("newShow")Show newShow, HttpSession session ) {
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		return "new_show.jsp";
	}
	
	@GetMapping("shows/{id}/edit")
	public String editRobot(@PathVariable("id")Long id, HttpSession session, Model model) {
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		
		model.addAttribute("show", showServ.getOne(id));
		
		return "edit_show.jsp";
	}

	// ========== Action ==========
	
	@PostMapping("shows/create")
	public String createRobot(@Valid @ModelAttribute("newShow")Show newShow, BindingResult result, HttpSession session)  {
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		if(result.hasErrors()) {
			return "new_show.jsp";
		}
		
		// this code actually makes the relationship between user and robot
		User user = userServ.getOne((Long)session.getAttribute("uuid"));
		newShow.setCreator(user);
		
		showServ.save(newShow);
		
		return "redirect:/shows";
	}
	
	@PutMapping("shows/{id}/update")
	public String updateRobot(@PathVariable("id")Long id, @Valid @ModelAttribute("show")Show show, BindingResult result, HttpSession session) {
		
		if(session.getAttribute("uuid")==null) {
			return "redirect:/";
		}
		
		if(result.hasErrors()) {
			return "edit_show.jsp";
		}
		
		// check if the user actually made this robot
		User user = userServ.getOne((Long)session.getAttribute("uuid"));
		Show showFromDB = showServ.getOne(id);
		if (showFromDB.getCreator().getId() != user.getId()) {
			return "redirect:/shows";
		} 
		
		show.setCreator(user);
		showServ.save(show);
		
		return "redirect:/shows/" + id;
	}
	
	
}
