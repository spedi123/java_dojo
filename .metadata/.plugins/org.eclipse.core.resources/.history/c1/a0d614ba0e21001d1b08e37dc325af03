package com.spedi123.testjava.models;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import org.springframework.format.annotation.DateTimeFormat;

@Entity
@Table(name = "names")
public class Name {

	// ========== Primary Key ==========

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	// ========== Member Variables ==========
	
	@NotEmpty(message = "Name must not be empty!")
	@Size(min = 2, max = 128, message = "Name must be at least 2 characters!")
	private String name;
	
	@NotEmpty(message = "Gender must not be empty!")
	@Size(min = 2, max = 128, message = "Idk how you managed to write a gender here. It's a drop down")
	private String gender;
	
	@NotEmpty(message = "Origin must not be empty!")
	@Size(min = 2, max = 128, message = "Origin must be between 2 and 128 characters!")
	private String origin;
	
	@NotEmpty(message = "Meaning must not be empty!")
	@Size(min = 2, message="Meaning must be at least 2 characters!")
	private String meaning;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	private User user;
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(
			name = "liked_names",
			joinColumns = @JoinColumn(name = "name_id"),
			inverseJoinColumns = @JoinColumn(name="user_id")
			)
	private List <User> userLiked;
	
	
	// ========== Data Creation Tracker ==========
	
	// ========== Constructors ==========


	// =========== Relationships ==========



	// ========== Data Creation Event ==========

	@PrePersist
	protected void onCreate() {
			this.createdAt = new Date();
			this.updatedAt = new Date();
		}
		
	@PreUpdate
	protected void onUpdate() {
			this.updatedAt = new Date();
	}
	// ========== Getters and Setters ==========
	public Name() {}
	
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getOrigin() {
		return origin;
	}

	public void setOrigin(String origin) {
		this.origin = origin;
	}

	public String getMeaning() {
		return meaning;
	}

	public void setMeaning(String meaning) {
		this.meaning = meaning;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Date getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public Date getUpdatedAt() {
		return updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}
	public List<User> getUserLiked() {
		return userLiked;
	}

	public void setUserLiked(List<User> userLiked) {
		this.userLiked = userLiked;
	}
}